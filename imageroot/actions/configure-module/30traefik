#!/usr/bin/env python3

import json
import os
import sys

import agent
import agent.tasks

data = json.load(sys.stdin)

host = data.get("host")
http2https = data.get("http2https", True)
lets_encrypt = data.get("lets_encrypt", False)

# Check if hostname is already in use by traefik
if agent.http_route_in_use(domain=host):
    agent.set_status("validation-failed")
    json.dump(
        [
            {
                "field": "host",
                "parameter": "host",
                "value": host,
                "error": "hostname_already_used_in_traefik",
            }
        ],
        fp=sys.stdout,
    )
    sys.exit(2)

agent.set_env("TRAEFIK_HOST", host)
agent.set_env("TRAEFIK_HTTP2HTTPS", http2https)
agent.set_env("TRAEFIK_LETS_ENCRYPT", lets_encrypt)

# Find default traefik instance for current node
default_traefik_id = agent.resolve_agent_id("traefik@node")
if default_traefik_id is None:
    sys.exit(2)

# Configure traefik virtual host
response = agent.tasks.run(
    agent_id=default_traefik_id,
    action="set-route",
    data={
        "instance": os.environ["MODULE_ID"],
        "url": f"http://127.0.0.1:{os.environ['TCP_PORT']}",
        "host": host,
        "lets_encrypt": lets_encrypt,
        "http2https": http2https,
    },
)

# Check if traefik configuration has been successfull
agent.assert_exp(response["exit_code"] == 0)
